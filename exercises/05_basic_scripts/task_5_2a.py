# -*- coding: utf-8 -*-
'''
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.1/30 - хост из сети 10.0.5.0/30

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Ограничение: Все задания надо выполнять используя только пройденные темы.


Указав индексы значений, которые передаются методу format, можно избавиться от дублирования:

In [21]: ip_template = 
    ...: IP address:
    ...: {0:<8} {1:<8} {2:<8} {3:<8}
    ...: {0:08b} {1:08b} {2:08b} {3:08b}
    ...: 

In [22]: print(ip_template.format(192, 100, 1, 1))

IP address:
192      100      1        1
11000000 01100100 00000001 00000001

'''

ip_template = '''{0:<8} {1:<8} {2:<8} {3:<8}
{0:08b} {1:08b} {2:08b} {3:08b}
'''

ip = input('Введите IP-сеть в формате: 10.1.1.0/24: ')
net = ip.split('/')[0]
mask = int(ip.split('/')[1])
octet = net.split('.')
bin_mask = '1'*mask+'0'*(32-mask)
#ip address:
na = int(octet[0])
nb = int(octet[1])
nc = int(octet[2])
nd = int(octet[3])
#mask:
ma = int(bin_mask[0:8],2)
mb = int(bin_mask[8:16],2)
mc = int(bin_mask[16:24],2)
md = int(bin_mask[24:32],2)

print('Network:')
print(ip_template.format(na & ma, nb & mb, nc & mc, nd & md))
print('Mask:')
print('/'+str(mask))
print(ip_template.format( ma, mb, mc, md))

